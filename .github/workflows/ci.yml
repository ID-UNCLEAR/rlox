name: 'CI: Build, Test and Format'

on:
  push:
  pull_request:
    types: [ opened, reopened, synchronize ]

env: 
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and Test - ${{ matrix.target }}
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: |
          cross build --target ${{ matrix.target }} --release

      - name: Clippy
        run: |
          cross clippy --target ${{ matrix.target }} --release

      - name: Test
        run: |
          cross test --target ${{ matrix.target }} --release

      - name: Rename, zip, and checksum binary
        run: |
          mkdir -p dist
          EXT=""
          [[ "${{ matrix.target }}" == *windows* ]] && EXT=".exe"
          BINARY="rlox-${{ matrix.target }}$EXT"
          cp target/${{ matrix.target }}/release/rlox$EXT "dist/$BINARY"
          cd dist
          zip "$BINARY.zip" "$BINARY"
          sha256sum "$BINARY" > "$BINARY.sha256"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: dist/*

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check formatting
        run: |
          cargo fmt --all -- --check