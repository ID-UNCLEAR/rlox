name: 'CI: Build, Test and Format'

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install binstall
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install cross
        run: cargo binstall cross

      - name: Build
        run: cross build --target ${{ matrix.target }} --release

      - name: Clippy
        run: cross clippy --target ${{ matrix.target }} --release

      - name: Rename and move binary
        run: |
          mkdir -p dist
          EXT=""
          [[ "${{ matrix.target }}" == *windows* ]] && EXT=".exe"
          cp target/${{ matrix.target }}/release/rlox$EXT dist/rlox-${{ matrix.target }}$EXT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: dist/*

  test:
    name: Test and Coverage
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Run tests and generate code coverage
        run: cargo llvm-cov nextest --config-file nextest.toml --release --all-features --workspace --codecov --output-path codecov.json

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: target/nextest/default/junit.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          fail_ci_if_error: true

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check formatting
        run: cargo fmt --all -- --check
